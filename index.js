const { create } = require('@wppconnect-team/wppconnect');

const estados = new Map(); // Armazena estado dos contatos
const timeouts = new Map(); // Armazena timeouts por n√∫mero

function emHorarioComercial() {
  const agora = new Date();
  const hora = agora.getHours();
  const dia = agora.getDay(); // 0 = domingo, 6 = s√°bado
  if (dia === 0) return false;
  if (dia === 6) return hora >= 8 && hora < 12;
  return hora >= 6 && hora < 21.5;
}

function comMarcaDagua(texto) {
  return `${texto}\n\nüíª Produzido por Hexatec`;
}

const menu = comMarcaDagua(`üèãÔ∏è *Academia Aquafitness* ‚Äì Escolha uma op√ß√£o:

1Ô∏è‚É£ Muscula√ß√£o
2Ô∏è‚É£ Hidrogin√°stica
3Ô∏è‚É£ Nata√ß√£o Adulto
4Ô∏è‚É£ Funcional Kids
5Ô∏è‚É£ Nata√ß√£o Infantil
6Ô∏è‚É£ Nata√ß√£o Infantil + Funcional Kids
7Ô∏è‚É£ Servi√ßos (Taxas)
8Ô∏è‚É£ Avalia√ß√µes (F√≠sica e Nutricional)
9Ô∏è‚É£ Pilates Individual
üîü Pilates em Grupo
1Ô∏è‚É£1Ô∏è‚É£ Pacotes de Avalia√ß√£o
1Ô∏è‚É£2Ô∏è‚É£ Hor√°rios das Aulas
1Ô∏è‚É£3Ô∏è‚É£ Localiza√ß√£o
1Ô∏è‚É£4Ô∏è‚É£ Falar com atendente`);

create({
  session: 'academia',
  headless: true,
  useChrome: false,
  puppeteerOptions: {
    args: ['--no-sandbox', '--disable-setuid-sandbox']
  },
  catchQR: (base64Qr, asciiQR) => {
    console.clear();
    console.log('üì≤ Escaneie o QR Code abaixo para conectar o WhatsApp:\n');
    console.log(asciiQR);
  },
})
  .then((client) => {
    console.log('ü§ñ Bot iniciado com sucesso!');

    client.onMessage(async (msg) => {
      // üõë Filtros para n√£o responder a si mesmo, atualiza√ß√µes, status e canais
      if (msg.fromMe || msg.from === msg.to || msg.from.includes('broadcast') || msg.from.includes('status')) {
        return;
      }

      const contato = msg.from;
      const texto = msg.body?.trim().toLowerCase();
      const estado = estados.get(contato) || {};

      if (texto === 'menu') {
        estados.set(contato, { iniciado: true });
        return client.sendText(contato, `üîÅ Atendimento reiniciado!\n\n${menu}`);
      }

      if (estado.coletandoDados) {
        if (!estado.nome) {
          estado.nome = msg.body;
          estados.set(contato, estado);
          return client.sendText(contato, '‚úÖ Agora, informe seu interesse (ex: muscula√ß√£o, pilates, avalia√ß√£o, hidrogin√°stica, nata√ß√£o):');
        } else if (!estado.interesse) {
          estado.interesse = msg.body;
          estados.set(contato, estado);
          return client.sendText(contato, 'üìû Por fim, informe seu n√∫mero com DDD:');
        } else if (!estado.telefone) {
          estado.telefone = msg.body;

          await client.sendText(contato, comMarcaDagua('‚úÖ Obrigado! Seus dados foram enviados ao atendente. Entraremos em contato em breve. Caso queira reiniciar, digite *menu*.'));

          const msgFinal = `üì• *Novo Contato - Academia Aquafitness*\n\nüë§ Nome: ${estado.nome}\nüéØ Interesse: ${estado.interesse}\nüì± Telefone: ${estado.telefone}\n\nüïí Captado via bot.`;

          const numero = '5514997246169@c.us';

          if (numero.endsWith('@c.us')) {
            try {
              const status = await client.checkNumberStatus(numero);
              if (status && status.canReceiveMessage) {
                await client.sendText(numero, msgFinal);
              } else {
                console.warn('‚ö†Ô∏è N√∫mero n√£o pode receber mensagens.');
              }
            } catch (err) {
              console.error('‚ùå Erro ao verificar/enviar para atendente:', err);
            }
          } else {
            console.warn('üö´ N√∫mero inv√°lido (pode ser grupo, broadcast ou status). Mensagem bloqueada.');
          }

          estados.delete(contato);

          const timeout = setTimeout(() => {
            client.sendText(contato, 'üîí Atendimento autom√°tico encerrado. Para reiniciar, digite *menu*.');
            timeouts.delete(contato);
          }, 2 * 60 * 1000);
          timeouts.set(contato, timeout);

          return;
        }
      }

      if (!estado.iniciado) {
        const saudacao = emHorarioComercial()
          ? 'üëã Ol√°! Seja bem-vindo √† *Academia Aquafitness*!'
          : 'üëã Ol√°! No momento estamos fora do hor√°rio de atendimento humano.';
        await client.sendText(contato, `${saudacao}\n\n${menu}`);
        estados.set(contato, { iniciado: true });
        return;
      }

      switch (texto) {
        case '1':
          return client.sendText(contato, `üèãÔ∏è *Muscula√ß√£o*\n\nInclui Funcional + Fit Dance\nüìÜ Mensal: R$ 110,00\nüìÜ Semestral: R$ 85,00\nüìÜ Anual: R$ 80,00\nüí≥ Avulso: R$ 20,00`);
        case '2':
          return client.sendText(contato, `üíß *Hidrogin√°stica*\n\nInclui Funcional + Fit Dance\n2x Semana - Mensal: R$ 165,00\n3x Semana - Mensal: R$ 205,00\n2x Semana - Semestral: R$ 145,00\n3x Semana - Semestral: R$ 185,00`);
        case '3':
          return client.sendText(contato, `üèä *Nata√ß√£o Adulto*\n\nInclui Funcional + Fit Dance\n2x Mensal: R$ 175,00\n3x Mensal: R$ 215,00\n2x Semestral: R$ 155,00\n3x Semestral: R$ 195,00`);
        case '4':
          return client.sendText(contato, `üëß *Funcional Kids*\n\n2x Mensal: R$ 85,00\n2x Semestral: R$ 75,00\nüïí Ter√ßa e Quinta √†s 18h10`);
        case '5':
          return client.sendText(contato, `üßí *Nata√ß√£o Infantil*\n\n2x Mensal: R$ 175,00\n3x Mensal: R$ 225,00\n2x Semestral: R$ 155,00\n3x Semestral: R$ 205,00`);
        case '6':
          return client.sendText(contato, `üë¶ *Nata√ß√£o Infantil + Funcional Kids*\n\n2x Mensal: R$ 195,00\n3x Mensal: R$ 240,00\n2x Semestral: R$ 180,00\n3x Semestral: R$ 225,00`);
        case '7':
          return client.sendText(contato, `üíº *Servi√ßos*\n\nüìå Taxa de Avalia√ß√£o Inicial: R$ 35,00\nüìå Taxa de Matr√≠cula: R$ 20,00`);
        case '8':
          return client.sendText(contato, `üß™ *Avalia√ß√µes*\n\nüìä Avalia√ß√£o F√≠sica: R$ 100,00\nü•ó Avalia√ß√£o Nutricional: R$ 250,00`);
        case '9':
          return client.sendText(contato, `üßò *Pilates Individual*\n\nMensal: 1x R$ 170,00 | 2x R$ 290,00 | 3x R$ 390,00\nSemestral: 1x R$ 150,00 | 2x R$ 250,00 | 3x R$ 345,00\nAvulso: R$ 50,00`);
        case '10':
          return client.sendText(contato, `üßò‚Äç‚ôÄÔ∏è *Pilates em Grupo (at√© 3 pessoas)*\n\nMensal: 1x R$ 130,00 | 2x R$ 200,00 | 3x R$ 280,00\nSemestral: 1x R$ 118,00 | 2x R$ 180,00 | 3x R$ 260,00\nAvulso: R$ 35,00`);
        case '11':
          return client.sendText(contato, `üìä *Pacotes Avalia√ß√£o*\n\nBioimped√¢ncia: 12x R$ 9,90\nAdip√¥metro: 12x R$ 24,90`);
        case '12':
          return client.sendText(contato, `üïí *Hor√°rios das Aulas ‚Äì Academia Aquafitness* üïí

üìö *Aulas*
‚Ä¢ 17h - Funcional (2¬™, 3¬™, 4¬™)
‚Ä¢ 18h30 - Funcional (2¬™, 4¬™)
‚Ä¢ 19h30 - FITDANCE (2¬™)
‚Ä¢ 20h30 - GAP (4¬™)

üèä‚Äç‚ôÄÔ∏è *Piscina ‚Äì 2¬™, 4¬™ e 6¬™*
‚Ä¢ 07h - Nata√ß√£o Adulto (iniciante/avan√ßado)
‚Ä¢ 08h - Hidrogin√°stica
‚Ä¢ 09h - Nata√ß√£o Infantil (7 a 12 anos)
‚Ä¢ 09h50 - Nata√ß√£o Infantil (2 a 6 anos)
‚Ä¢ 16h30 - Nata√ß√£o Adulto (iniciante/avan√ßado)
‚Ä¢ 17h20 - Nata√ß√£o Infantil (3 a 12 anos)
‚Ä¢ 18h10 - Nata√ß√£o Infantil (3 a 12 anos)
‚Ä¢ 19h10 - Hidrogin√°stica
‚Ä¢ 20h - Nata√ß√£o Adulto (iniciante/avan√ßado)

üèä‚Äç‚ôÇÔ∏è *Piscina ‚Äì 3¬™ e 5¬™*
‚Ä¢ 06h - Nata√ß√£o Avan√ßado
‚Ä¢ 13h - Nata√ß√£o Avan√ßado
‚Ä¢ 14h - Nata√ß√£o Avan√ßado
‚Ä¢ 15h - Nata√ß√£o Infantil (2 a 4 anos)
‚Ä¢ 16h - Hidro Power
‚Ä¢ 16h - Nata√ß√£o Infantil (3 a 6 anos)
‚Ä¢ 17h - Nata√ß√£o Infantil (2 a 12 anos)
‚Ä¢ 18h - Nata√ß√£o Infantil (2 a 6 anos)
‚Ä¢ 18h - Nata√ß√£o Adulto (iniciante/avan√ßado)
‚Ä¢ 19h10 - Nata√ß√£o Infantil (3 a 12 anos)`);
      case '13':
        return client.sendText(contato, `üìç *Endere√ßo:*\nR. Maestro Osc√°r Mendes, 1-135 - Novo Jardim Pagani, Bauru - SP, 17024-270\nüìû (14) 99876-0595\nüåê Google Maps: https://www.google.com/maps/place/aquafitness+bauru/data=!4m2!3m1!1s0x94bf67d90cebcf13:0x37cf3654375fcc9?sa=X&ved=1t:242&ictx=111`);
      case '14':
        estados.set(contato, { coletandoDados: true });
        return client.sendText(contato, 'üëã Para te ajudar melhor, informe seu *nome completo*:');
      default:
        return client.sendText(contato, '‚ùì Op√ß√£o inv√°lida. Digite o n√∫mero correspondente ou envie *menu* para ver novamente:\n\n' + menu);
    }
  });
})
.catch((erro) => {
  console.error('‚ùå Erro ao iniciar o bot:', erro);
});
